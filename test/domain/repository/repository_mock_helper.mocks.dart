// Mocks generated by Mockito 5.4.4 from annotations
// in bookfinder/test/domain/repository/repository_mock_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bookfinder/core/network/network_info.dart' as _i4;
import 'package:bookfinder/data/datasources/local/book_library_local_datasource.dart'
    as _i7;
import 'package:bookfinder/data/datasources/remote/book_library_remote_datasource.dart'
    as _i6;
import 'package:bookfinder/data/models/book_detail_model.dart' as _i3;
import 'package:bookfinder/data/models/book_response.dart' as _i2;
import 'package:bookfinder/domain/entities/book_details_entity.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBookResponse_0 extends _i1.SmartFake implements _i2.BookResponse {
  _FakeBookResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBookDetailModel_1 extends _i1.SmartFake
    implements _i3.BookDetailModel {
  _FakeBookDetailModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [BookLibraryRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookLibraryRemoteDatasource extends _i1.Mock
    implements _i6.BookLibraryRemoteDatasource {
  MockBookLibraryRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.BookResponse> searchBooks(
    String? query,
    String? fields,
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchBooks,
          [
            query,
            fields,
            page,
            limit,
          ],
        ),
        returnValue: _i5.Future<_i2.BookResponse>.value(_FakeBookResponse_0(
          this,
          Invocation.method(
            #searchBooks,
            [
              query,
              fields,
              page,
              limit,
            ],
          ),
        )),
      ) as _i5.Future<_i2.BookResponse>);

  @override
  _i5.Future<_i3.BookDetailModel> fetchBookDetail(String? olid) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBookDetail,
          [olid],
        ),
        returnValue:
            _i5.Future<_i3.BookDetailModel>.value(_FakeBookDetailModel_1(
          this,
          Invocation.method(
            #fetchBookDetail,
            [olid],
          ),
        )),
      ) as _i5.Future<_i3.BookDetailModel>);
}

/// A class which mocks [BookLibraryLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookLibraryLocalDatasource extends _i1.Mock
    implements _i7.BookLibraryLocalDatasource {
  MockBookLibraryLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> insertBookDetailsToDB(_i8.BookDetailEntity? bookDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertBookDetailsToDB,
          [bookDetails],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i8.BookDetailEntity?> getBookDetailsFromDB(String? olid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookDetailsFromDB,
          [olid],
        ),
        returnValue: _i5.Future<_i8.BookDetailEntity?>.value(),
      ) as _i5.Future<_i8.BookDetailEntity?>);
}
